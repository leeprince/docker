# Compose 是用于定义和运行多容器 Docker 应用程序的工具。
# docker-compose的默认模版文件为:docker-compose.yml。和Dockerfile一样，它也是有自己的语法 命令的。其中定义的每个服务都必须通过image指令指定镜像或build指令(需要 Dockerfile)来自动构建。

version: "3.3" # 指定本 compose 文件与 docker 版本对应的版本号

services: # 包含的服务
  nginx: # 服务名。每个docker-compose.yml必须定义image或者build中的一个，其它的是可选的。
      image: leeprince/nginx # 镜像名
      container_name: nginx # 指定自定义容器名称，而不是生成的默认名称。
      stdin_open: true # 打开标准输入
      tty: true # 模拟一个伪终端
      #restart: always
      depends_on: # 设置依赖关系
        - php
      volumes: # 挂载主机路径或命名卷，指定为服务的子选项。您可以将主机路径作为单个服务定义的一部分挂载，并且不需要在顶级结果中定义 「volumes」键名
        - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
        - ./nginx/conf/conf.d/:/etc/nginx/conf.d/
        - ./nginx/html/:/usr/share/nginx/html/
        - ./nginx/logs/:/var/log/nginx/
      networks: # 要加入的网络，引用顶级结构中 「networks」下的键名
        - myNetCompose
      ports: #
        - 8000:80

  php:
      image: leeprince/php:7.4.5-fpm-alpine-redis-swoole
      container_name: php
      stdin_open: true
      tty: true
      #restart: always
      volumes:
        - ./php/conf/php.ini:/usr/local/etc/php/php.ini
        - ./php/html/:/var/www/html/
      networks:
        - myNetCompose
      ports:
        - 9000:9000

  mysql-m:
      image: leeprince/mysql
      container_name: mysql-m
      stdin_open: true
      tty: true
      #restart: always
      volumes:
        - ./mysql/master/conf/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
        - ./mysql/master/data/:/var/lib/mysql/
      networks:
        - myNetCompose
      ports:
        - 33070:3306
  mysql-s1:
      image: leeprince/mysql
      container_name: mysql-s1
      stdin_open: true
      tty: true
      #restart: always
      volumes:
        - ./mysql/slave01/conf/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
        - ./mysql/slave01/data/:/var/lib/mysql/
      networks:
        - myNetCompose
      ports:
        - 33071:3306

  redis-m:
      image: leeprince/redis
      container_name: redis-m
      stdin_open: true
      tty: true
      #restart: always
      volumes:
        - ./redis/master/:/usr/local/etc/redis/
      networks:
        - myNetCompose
      ports:
        - 63790:6379
      privileged: true # 特殊权限
  redis-s1:
      image: leeprince/redis
      container_name: redis-s1
      stdin_open: true
      tty: true
      #restart: always
      volumes:
        - ./redis/slave01/:/usr/local/etc/redis/
      networks:
        - myNetCompose
      ports:
        - 63791:6379
      privileged: true

networks: # 创建网络配置
  myNetCompose: # 自定义网络名
    #external: true # ERROR: Network myNetCompose declared as external, but could not be found. Please create the network manually using `docker network create myNetCompose` and try again.
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/24
# 定义一个外部存在的 network
# networks:
#   docker_default:
#     external: true
